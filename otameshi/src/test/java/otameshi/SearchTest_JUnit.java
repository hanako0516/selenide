package otameshi;

import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;

//import javax.xml.datatype.Duration;

import org.junit.After;
import org.junit.Before;
// Generated by Selenium IDE
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;



/**
 * Selenide IDEのExportメニューでJUnitで出力したものを加工したクラス
 * 主に書き換えが発生したのは以下
 * ・System.setPropertyでクロームドライバーを設定
 * ・最初にURLを開いた(1)後、画面のサイズを変更
 * ・WebDriverWaitを使って5秒待つ動作を入れる(3)
 */



public class SearchTest_JUnit {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {


	//ChoromeのWebDriverを配置したパスを設定する。
    System.setProperty("webdriver.chrome.driver", "C:\\pleiades\\webdriver\\Chrome\\97\\chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void search() {



    // Test name: search
    // Step # | name | target | value | comment
    // 1 | open | /jma/index.html |  |
    driver.get("https://www.hogehoge.go.jp/jma/index.html");

    // 1.5 | setWindowSize | 955x737 |  |入力ボックスを出すために横幅が必要なのでこれを独自で挿入
    driver.manage().window().setSize(new Dimension(1280, 737));

    // 2 | click | xpath=//img[@alt='防災情報'] |  |
    driver.findElement(By.xpath("//img[@alt=\'防災情報\']")).click();

    // 3 | click | css=form:nth-child(2) > input |  |
    // driver.findElement(By.cssSelector("form:nth-child(2) > input")).click();
    // 明示的に待つ動作を入れる。Selenide IDEは実行の速さをゲージで調節できるがJUnit実行ではこれを入れる必要がある。
    WebElement firstResult = new WebDriverWait(driver, 5)
            .until(ExpectedConditions.elementToBeClickable(By.cssSelector("form:nth-child(2) > input")));
    firstResult.click();

    // 4 | type | css=form:nth-child(2) > input | 東京 |
    //driver.findElement(By.cssSelector("form:nth-child(2) > input")).sendKeys("東京");
    firstResult.sendKeys("東京");

    // 5 | click | linkText=東京都 |  |
    driver.findElement(By.linkText("東京都")).click();

    // 6 | assertText | css=.breadcrumb-offices | 東京都の防災情報 |
    assertThat(driver.findElement(By.cssSelector(".breadcrumb-offices")).getText(), is("東京都の防災情報"));

  }
}
